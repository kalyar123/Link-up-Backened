"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AngleUtils = void 0;
/** Static utils for angle adjustments and transformations */
var AngleUtils = /** @class */ (function () {
    function AngleUtils() {
    }
    /**
    * Converts angle in degrees to radians
    * @param {number} deg Angle in degrees
    * @return {number} Angle in radians
    */
    AngleUtils.toRadians = function (deg) {
        return deg / 180.0 * Math.PI;
    };
    /**
    * Converts angle in radians to degrees
    * @param {number} rad Angle in radians
    * @return {number} Angle in degrees
    */
    AngleUtils.toDegrees = function (rad) {
        return rad * 180.0 / Math.PI;
    };
    /**
    * Converts calculated angle of approach to the corresponding compass angle.
    * E.g. North = 0deg, East = 90deg, South = 180deg, West = 270deg.
    * @param {number} result Angle of approach in degrees
    * @return {number} Compass angle in degrees
    */
    AngleUtils.adjust = function (result) {
        return Math.round(result <= 0 ? result * -1.0 : 360 - result);
    };
    return AngleUtils;
}());
exports.AngleUtils = AngleUtils;
